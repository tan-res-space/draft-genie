openapi: 3.0.3
info:
  title: Draft Genie - Common Schemas
  description: Common schemas used across all Draft Genie services
  version: 1.0.0

components:
  schemas:
    # Common types
    UUID:
      type: string
      format: uuid
      example: "123e4567-e89b-12d3-a456-426614174000"

    Timestamp:
      type: string
      format: date-time
      example: "2024-01-15T10:30:00Z"

    # Enums
    BucketType:
      type: string
      enum:
        - EXCELLENT
        - GOOD
        - AVERAGE
        - POOR
        - NEEDS_IMPROVEMENT
      description: Quality bucket classification

    DraftType:
      type: string
      enum:
        - ORIGINAL
        - CORRECTED
      description: Type of draft

    SpeakerStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - SUSPENDED
      description: Speaker account status

    EvaluationStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - COMPLETED
        - FAILED
      description: Evaluation status

    # Error responses
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        correlation_id:
          $ref: '#/components/schemas/UUID'

    ValidationError:
      type: object
      required:
        - error
        - message
        - validation_errors
      properties:
        error:
          type: string
          example: "VALIDATION_ERROR"
        message:
          type: string
          example: "Request validation failed"
        validation_errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
        correlation_id:
          $ref: '#/components/schemas/UUID'

    # Pagination
    PaginationParams:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          default: 1
          description: Page number
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
          description: Items per page

    PaginatedResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items: {}
        pagination:
          type: object
          required:
            - page
            - limit
            - total
            - pages
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            pages:
              type: integer

    # Health check
    HealthCheck:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum:
            - healthy
            - unhealthy
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        version:
          type: string
        dependencies:
          type: object
          additionalProperties:
            type: object
            properties:
              status:
                type: string
              message:
                type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitParam:
      name: limit
      in: query
      description: Items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

