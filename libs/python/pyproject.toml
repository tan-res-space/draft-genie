[tool.poetry]
name = "draft-genie-python-libs"
version = "1.0.0"
description = "Shared Python libraries for DraftGenie microservices"
authors = ["DraftGenie Team"]
readme = "README.md"
packages = [
    { include = "common" },
    { include = "domain" },
    { include = "database" },
    { include = "events" }
]

[tool.poetry.dependencies]
python = "^3.11"
# FastAPI and web framework
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# Database clients
sqlalchemy = {extras = ["asyncio"], version = "^2.0.25"}
asyncpg = "^0.29.0"  # PostgreSQL async driver
motor = "^3.3.2"  # MongoDB async driver
redis = {extras = ["hiredis"], version = "^5.0.1"}

# Qdrant vector database
qdrant-client = "^1.7.0"

# Message queue
aio-pika = "^9.3.0"  # RabbitMQ async client

# AI/ML libraries
langchain = "^0.1.0"
langgraph = "^0.0.20"
google-generativeai = "^0.3.0"
sentence-transformers = "^2.2.2"

# NLP libraries
spacy = "^3.7.2"
nltk = "^3.8.1"

# Data science
numpy = "^1.26.0"
pandas = "^2.1.0"
scikit-learn = "^1.4.0"

# Utilities
python-dotenv = "^1.0.0"
python-multipart = "^0.0.6"
httpx = "^0.26.0"
aiofiles = "^23.2.1"
tenacity = "^8.2.3"  # Retry logic

# Logging
structlog = "^24.1.0"
python-json-logger = "^2.0.7"

# Message queue
aio-pika = "^9.3.1"  # RabbitMQ async client

# Validation and serialization
email-validator = "^2.1.0"
python-dateutil = "^2.8.2"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
httpx = "^0.26.0"  # For testing FastAPI

# Code quality
black = "^24.1.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pylint = "^3.0.0"

# Type stubs
types-redis = "^4.6.0"
types-python-dateutil = "^2.8.19"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=. --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["common", "domain", "database"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

